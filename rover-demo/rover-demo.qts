var gamepad = brick.gamepad();

var arm   = brick.motor("M4");
var right = brick.motor("M1");
var left  = brick.motor("M3");
var hand  = brick.motor("E1");

var led   = brick.motor("M2");

var sound = "media/psy_low_short.wav";

brick.run();

gamepad.pad.connect(
  function(padId, x, y) {
    if (padId == 2) {
      arm.setPower(y);
      hand.setPower(-x);
    }
    if (padId == 1) {
      left.setPower(y - x);
      right.setPower(y + x);
  		led.setPower(Math.abs(y));
    }
  }
)

gamepad.padUp.connect(
  function(padId, x, y) {
    if (padId == 2) {
      arm.powerOff();
      hand.powerOff();
    }
    if (padId == 1) {
      left.powerOff();
      right.powerOff();
			led.powerOff();
    }
  }
)

gamepad.wheel.connect(
	function(percent) {
		left.setPower(80 - percent / 2);
		right.setPower( 80 + percent / 2);
	}
)

gamepad.button.connect(
  function(buttonId, pressed) {
    switch (buttonId) {
      case 2: {
        brick.display().sadSmile();
        brick.wait(2000);
        brick.display().smile();
        break;
      }
      case 1: {
        brick.system("espeak -s 90 \"Hello, i am TRIK robot\"");
        break;
      }
      case 3: brick.playSound(sound); break;
      case 4: brick.objectSensor().init(true); break;
      case 5: brick.objectSensor().detect(); break;
      default: break;
    }
  }
)

brick.keys().buttonPressed.connect(
  function(code, state) {
    if (state == 0) 
		  return;

    if (code == 1) {
        main_loop();
        return;
    }
    
    if (code == 103 || code == 105 || code == 108)
      return;
    
	  brick.objectSensor().stop();
	  brick.wait(1000);	
	  brick.stop();
	  brick.quit();
  }
) 

var stopKey   = 108;
var detectKey = 105;
var fixKey    = 103;

var xPK = 0.35;
var xIK = 0.005;
var xDK = 0.25;


var minspeed  = 20;
var terminate = 0;
var fixLocs   = [0,0,0];
var m_chw     = 1;

function main_loop() 
{
  var locs    = [0,0,0];
  var locsold = [0,0,0];

  terminate = 0;
  hand.setPower(-100);
  brick.wait(500);
  hand.powerOff();

  brick.keys().wasPressed(stopKey); //lol hack?
  brick.objectSensor().init(true);
  
  while(!brick.keys().wasPressed(stopKey)) {
    if(brick.keys().wasPressed(detectKey)) {     
      brick.objectSensor().detect();
    } else if(brick.keys().wasPressed(fixKey)) {     
      fixLocs = brick.objectSensor().read();     
    }
    brick.wait(100);
  }
  
  while(!terminate) {
    if(brick.keys().wasPressed(stopKey)) {     
      terminate = 1;          
    } else if(brick.keys().wasPressed(detectKey)) {     
      brick.objectSensor().detect();
    } else if(brick.keys().wasPressed(fixKey)) {     
      fixLocs = brick.objectSensor().read();
    } else {
      locs = brick.objectSensor().read();
      if (locs[2] > 2) {
        trackingChasis(locs, locsold);
        trackingArm(locs);
        trackingHand(locs);
      } else {
        stopMotors();
      }
      
      locsold = locs;      
    }
    brick.wait(30);
  }

  stopMotors();
}

function stopMotors() {
  arm.powerOff();
  left.powerOff();
  right.powerOff();
  hand.powerOff();
}

function trackingChasis(locs, locsold)
{
  if (m_chw) {
    var x = pp(locs[0], -100, fixLocs[0], 100);
    var xold = pp(locsold[0], -100, fixLocs[0], 100);
    var myaw = xPK*x + xIK*(x + xold) + xDK*(x - xold);
    var speed = pp(locs[2], 0, fixLocs[2], 100); // back/forward based on ball size
    var backSpeed = pp(locs[1], -100, fixLocs[1], 100); // move back/forward if ball leaves range

    var l = -((speed + backSpeed) + myaw)/4;
    var r = -((speed + backSpeed) - myaw)/4;
    left.setPower(sign(l)*minspeed+l);
    right.setPower(sign(r)*minspeed+r);
  } else {
    left.setPower(0);
    right.setPower(0);
  }
}

function trackingArm(locs)
{
  var speed = pp(locs[1], -100, fixLocs[1], 100);
  if (Math.abs(speed)>10) { 
    m_chw = 0;
    speed += sign(speed)*20;
  } else {
    speed = 0;
    m_chw = 1;
  }
  arm.setPower(-speed);
}

function trackingHand(locs)
{
  xd = Math.abs(locs[0] - fixLocs[0]);
  yd = Math.abs(locs[1] - fixLocs[1]);
  md = Math.abs(locs[2] - fixLocs[2]);
  print("x->", xd, "y->", yd, "m->", md);
  if ((xd < 5) && (yd < 5) && (md < 5)){ 
    arm.powerOff();
    left.powerOff();
    right.powerOff();
    hand.setPower(-100);
    brick.wait(1000);
    hand.setPower(100);
    brick.wait(1000);
    hand.powerOff();
    terminate = 1;
  }
}

function sign(a) {
  return a > 0 ? 1 : a < 0 ? -1 : 0;
}

function pp(_val, _min, _zero, _max) 
{
  var adj = _val - _zero;
  if (adj > 0) {
    if (_val >= _max)
      return 100;
    else
      return (+100*(_val-_zero)) / (_max-_zero); // _max!=_zero, otherwise (_val>=_max) matches
  }
  else if (adj < 0) {
    if (_val <= _min)
      return -100;
    else
      return (-100*(_val-_zero)) / (_min-_zero); // _min!=_zero, otherwise (_val<=_min) matches
  }
  else
    return 0;
}


